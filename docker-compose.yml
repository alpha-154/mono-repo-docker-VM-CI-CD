version: "3.8"

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  prisma-migrate:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend # Any service with prisma can be used
    command: >
      sh -c "bun run db:push"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mydb
    depends_on:
      db:
        condition: service_healthy

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mydb
    depends_on:
      - prisma-migrate
    develop:
      watch:
        - action: sync
          path: ./apps/backend
          target: /usr/src/app/apps/backend
        - action: sync
          path: ./packages
          target: /usr/src/app/packages

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mydb
      - NEXT_PUBLIC_WS_URL=ws://localhost:8081 # For the client-side to connect to the WebSocket
    depends_on:
      - prisma-migrate
    develop:
      watch:
        - action: sync
          path: ./apps/web
          target: /usr/src/app/apps/web
        - action: sync
          path: ./packages
          target: /usr/src/app/packages

  ws:
    build:
      context: .
      dockerfile: docker/Dockerfile.ws
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mydb
    depends_on:
      - prisma-migrate
    develop:
      watch:
        - action: sync
          path: ./apps/ws
          target: /usr/src/app/apps/ws
        - action: sync
          path: ./packages
          target: /usr/src/app/packages

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
